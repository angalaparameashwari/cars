/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables;


import com.tej.JooQDemo.jooq.sample.model.CarsApp;
import com.tej.JooQDemo.jooq.sample.model.Keys;
import com.tej.JooQDemo.jooq.sample.model.tables.records.CustomerRentedCarsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRentedCars extends TableImpl<CustomerRentedCarsRecord> {

    private static final long serialVersionUID = 1740189428;

    /**
     * The reference instance of <code>cars_app.customer_rented_cars</code>
     */
    public static final CustomerRentedCars CUSTOMER_RENTED_CARS = new CustomerRentedCars();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CustomerRentedCarsRecord> getRecordType() {
        return CustomerRentedCarsRecord.class;
    }

    /**
     * The column <code>cars_app.customer_rented_cars.id</code>.
     */
    public final TableField<CustomerRentedCarsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('cars_app.customer_rented_cars_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>cars_app.customer_rented_cars.customer_id</code>.
     */
    public final TableField<CustomerRentedCarsRecord, Long> CUSTOMER_ID = createField(DSL.name("customer_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cars_app.customer_rented_cars.car_id</code>.
     */
    public final TableField<CustomerRentedCarsRecord, Long> CAR_ID = createField(DSL.name("car_id"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>cars_app.customer_rented_cars.start_time</code>.
     */
    public final TableField<CustomerRentedCarsRecord, LocalDateTime> START_TIME = createField(DSL.name("start_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>cars_app.customer_rented_cars.end_time</code>.
     */
    public final TableField<CustomerRentedCarsRecord, LocalDateTime> END_TIME = createField(DSL.name("end_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>cars_app.customer_rented_cars.deleted</code>.
     */
    public final TableField<CustomerRentedCarsRecord, String> DELETED = createField(DSL.name("deleted"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>cars_app.customer_rented_cars.created_at</code>.
     */
    public final TableField<CustomerRentedCarsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>cars_app.customer_rented_cars.updated_at</code>.
     */
    public final TableField<CustomerRentedCarsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("updated_at"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>cars_app.customer_rented_cars</code> table reference
     */
    public CustomerRentedCars() {
        this(DSL.name("customer_rented_cars"), null);
    }

    /**
     * Create an aliased <code>cars_app.customer_rented_cars</code> table reference
     */
    public CustomerRentedCars(String alias) {
        this(DSL.name(alias), CUSTOMER_RENTED_CARS);
    }

    /**
     * Create an aliased <code>cars_app.customer_rented_cars</code> table reference
     */
    public CustomerRentedCars(Name alias) {
        this(alias, CUSTOMER_RENTED_CARS);
    }

    private CustomerRentedCars(Name alias, Table<CustomerRentedCarsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CustomerRentedCars(Name alias, Table<CustomerRentedCarsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> CustomerRentedCars(Table<O> child, ForeignKey<O, CustomerRentedCarsRecord> key) {
        super(child, key, CUSTOMER_RENTED_CARS);
    }

    @Override
    public Schema getSchema() {
        return CarsApp.CARS_APP;
    }

    @Override
    public Identity<CustomerRentedCarsRecord, Long> getIdentity() {
        return Keys.IDENTITY_CUSTOMER_RENTED_CARS;
    }

    @Override
    public UniqueKey<CustomerRentedCarsRecord> getPrimaryKey() {
        return Keys.CUSTOMER_RENTED_CARS_PKEY;
    }

    @Override
    public List<UniqueKey<CustomerRentedCarsRecord>> getKeys() {
        return Arrays.<UniqueKey<CustomerRentedCarsRecord>>asList(Keys.CUSTOMER_RENTED_CARS_PKEY);
    }

    @Override
    public List<ForeignKey<CustomerRentedCarsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CustomerRentedCarsRecord, ?>>asList(Keys.CUSTOMER_RENTED_CARS__CUSTOMER_RENTED_CARS_CUSTOMER_ID_FKEY, Keys.CUSTOMER_RENTED_CARS__CUSTOMER_RENTED_CARS_CAR_ID_FKEY);
    }

    public Customers customers() {
        return new Customers(this, Keys.CUSTOMER_RENTED_CARS__CUSTOMER_RENTED_CARS_CUSTOMER_ID_FKEY);
    }

    public CarsMeta carsMeta() {
        return new CarsMeta(this, Keys.CUSTOMER_RENTED_CARS__CUSTOMER_RENTED_CARS_CAR_ID_FKEY);
    }

    @Override
    public CustomerRentedCars as(String alias) {
        return new CustomerRentedCars(DSL.name(alias), this);
    }

    @Override
    public CustomerRentedCars as(Name alias) {
        return new CustomerRentedCars(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerRentedCars rename(String name) {
        return new CustomerRentedCars(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CustomerRentedCars rename(Name name) {
        return new CustomerRentedCars(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, LocalDateTime, LocalDateTime, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
