/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables.records;


import com.tej.JooQDemo.jooq.sample.model.tables.Cars;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CarsRecord extends UpdatableRecordImpl<CarsRecord> implements Record8<Long, Long, String, String, Boolean, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1272372393;

    /**
     * Setter for <code>cars_app.cars.id</code>.
     */
    public CarsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cars_app.cars.car_id</code>.
     */
    public CarsRecord setCarId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.car_id</code>.
     */
    public Long getCarId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cars_app.cars.registration_no</code>.
     */
    public CarsRecord setRegistrationNo(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.registration_no</code>.
     */
    public String getRegistrationNo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cars_app.cars.engine_no</code>.
     */
    public CarsRecord setEngineNo(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.engine_no</code>.
     */
    public String getEngineNo() {
        return (String) get(3);
    }

    /**
     * Setter for <code>cars_app.cars.is_rentable</code>.
     */
    public CarsRecord setIsRentable(Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.is_rentable</code>.
     */
    public Boolean getIsRentable() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>cars_app.cars.deleted</code>.
     */
    public CarsRecord setDeleted(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.deleted</code>.
     */
    public String getDeleted() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cars_app.cars.created_at</code>.
     */
    public CarsRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>cars_app.cars.updated_at</code>.
     */
    public CarsRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.cars.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, String, Boolean, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, String, Boolean, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Cars.CARS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Cars.CARS.CAR_ID;
    }

    @Override
    public Field<String> field3() {
        return Cars.CARS.REGISTRATION_NO;
    }

    @Override
    public Field<String> field4() {
        return Cars.CARS.ENGINE_NO;
    }

    @Override
    public Field<Boolean> field5() {
        return Cars.CARS.IS_RENTABLE;
    }

    @Override
    public Field<String> field6() {
        return Cars.CARS.DELETED;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Cars.CARS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Cars.CARS.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCarId();
    }

    @Override
    public String component3() {
        return getRegistrationNo();
    }

    @Override
    public String component4() {
        return getEngineNo();
    }

    @Override
    public Boolean component5() {
        return getIsRentable();
    }

    @Override
    public String component6() {
        return getDeleted();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCarId();
    }

    @Override
    public String value3() {
        return getRegistrationNo();
    }

    @Override
    public String value4() {
        return getEngineNo();
    }

    @Override
    public Boolean value5() {
        return getIsRentable();
    }

    @Override
    public String value6() {
        return getDeleted();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public CarsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CarsRecord value2(Long value) {
        setCarId(value);
        return this;
    }

    @Override
    public CarsRecord value3(String value) {
        setRegistrationNo(value);
        return this;
    }

    @Override
    public CarsRecord value4(String value) {
        setEngineNo(value);
        return this;
    }

    @Override
    public CarsRecord value5(Boolean value) {
        setIsRentable(value);
        return this;
    }

    @Override
    public CarsRecord value6(String value) {
        setDeleted(value);
        return this;
    }

    @Override
    public CarsRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public CarsRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public CarsRecord values(Long value1, Long value2, String value3, String value4, Boolean value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CarsRecord
     */
    public CarsRecord() {
        super(Cars.CARS);
    }

    /**
     * Create a detached, initialised CarsRecord
     */
    public CarsRecord(Long id, Long carId, String registrationNo, String engineNo, Boolean isRentable, String deleted, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Cars.CARS);

        set(0, id);
        set(1, carId);
        set(2, registrationNo);
        set(3, engineNo);
        set(4, isRentable);
        set(5, deleted);
        set(6, createdAt);
        set(7, updatedAt);
    }
}
