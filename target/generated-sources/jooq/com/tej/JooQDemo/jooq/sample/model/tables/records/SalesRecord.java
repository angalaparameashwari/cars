/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables.records;


import com.tej.JooQDemo.jooq.sample.model.tables.Sales;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SalesRecord extends TableRecordImpl<SalesRecord> implements Record8<Long, String, Long, Long, LocalDateTime, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1118397552;

    /**
     * Setter for <code>cars_app.sales.id</code>.
     */
    public SalesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cars_app.sales.external_id</code>.
     */
    public SalesRecord setExternalId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.external_id</code>.
     */
    public String getExternalId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cars_app.sales.customer_id</code>.
     */
    public SalesRecord setCustomerId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.customer_id</code>.
     */
    public Long getCustomerId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cars_app.sales.car_id</code>.
     */
    public SalesRecord setCarId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.car_id</code>.
     */
    public Long getCarId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>cars_app.sales.dates</code>.
     */
    public SalesRecord setDates(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.dates</code>.
     */
    public LocalDateTime getDates() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>cars_app.sales.status</code>.
     */
    public SalesRecord setStatus(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.status</code>.
     */
    public String getStatus() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cars_app.sales.created_at</code>.
     */
    public SalesRecord setCreatedAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>cars_app.sales.updated_at</code>.
     */
    public SalesRecord setUpdatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>cars_app.sales.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, Long, Long, LocalDateTime, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, Long, Long, LocalDateTime, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Sales.SALES.ID;
    }

    @Override
    public Field<String> field2() {
        return Sales.SALES.EXTERNAL_ID;
    }

    @Override
    public Field<Long> field3() {
        return Sales.SALES.CUSTOMER_ID;
    }

    @Override
    public Field<Long> field4() {
        return Sales.SALES.CAR_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Sales.SALES.DATES;
    }

    @Override
    public Field<String> field6() {
        return Sales.SALES.STATUS;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Sales.SALES.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Sales.SALES.UPDATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getExternalId();
    }

    @Override
    public Long component3() {
        return getCustomerId();
    }

    @Override
    public Long component4() {
        return getCarId();
    }

    @Override
    public LocalDateTime component5() {
        return getDates();
    }

    @Override
    public String component6() {
        return getStatus();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getExternalId();
    }

    @Override
    public Long value3() {
        return getCustomerId();
    }

    @Override
    public Long value4() {
        return getCarId();
    }

    @Override
    public LocalDateTime value5() {
        return getDates();
    }

    @Override
    public String value6() {
        return getStatus();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public SalesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SalesRecord value2(String value) {
        setExternalId(value);
        return this;
    }

    @Override
    public SalesRecord value3(Long value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public SalesRecord value4(Long value) {
        setCarId(value);
        return this;
    }

    @Override
    public SalesRecord value5(LocalDateTime value) {
        setDates(value);
        return this;
    }

    @Override
    public SalesRecord value6(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public SalesRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public SalesRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public SalesRecord values(Long value1, String value2, Long value3, Long value4, LocalDateTime value5, String value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalesRecord
     */
    public SalesRecord() {
        super(Sales.SALES);
    }

    /**
     * Create a detached, initialised SalesRecord
     */
    public SalesRecord(Long id, String externalId, Long customerId, Long carId, LocalDateTime dates, String status, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Sales.SALES);

        set(0, id);
        set(1, externalId);
        set(2, customerId);
        set(3, carId);
        set(4, dates);
        set(5, status);
        set(6, createdAt);
        set(7, updatedAt);
    }
}
